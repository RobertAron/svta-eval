{"version":3,"sources":["images/classic.jpg","images/loom-carousel.jpg","images/zen-carousel.jpg","CartContext.tsx","MattressChoseComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CartContext","React","createContext","items","addItem","displayName","CartContextProvider","children","useState","setItems","Provider","value","newItem","useCartContext","useContext","matresses","classic","name","price","reviewRating","image","classicMatress","loom","loomMatress","zen","zenMatress","Object","values","map","forEach","imageUrl","Image","src","useStyles","makeStyles","theme","matress","display","gap","spacing","gridTemplateColumns","matressSelectionContainer","gridAutoFlow","gridAutoColumns","gridAutoRows","matressDetails","justifyContent","selectButtons","width","border","flexGrow","backgroundColor","color","whiteSpace","noTextTransform","textTransform","matressImage","objectFit","height","minHeight","imageHolder","gridTemplateRows","overflow","gridColumn","gridRow","variants","enter","direction","x","opacity","center","zIndex","exit","MattressChooseComponent","classes","keys","selectedMatress","setSelectedMatress","oldItemIndex","newItemIndex","setItemIndex","className","AnimatePresence","initial","custom","motion","img","animate","transition","stiffness","Typography","variant","component","id","ToggleButtonGroup","exclusive","onChange","_","newValue","newKey","newNewItemIndex","findIndex","item","updateMatress","aria-labelledby","entries","key","ToggleButton","Rating","aria-label","precision","icon","Hotel","fontSize","toLocaleString","Button","onClick","clsx","toolbar","mainContainer","paddingTop","paddingBottom","App","AppBar","position","elevation","Container","maxWidth","Toolbar","disableGutters","IconButton","edge","Badge","badgeContent","length","ShoppingCartOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","typography","fontFamily","overline","fontWeight","letterSpacing","subtitle2","h1","h2","h3","h4","h5","h6","palette","primary","main","contrastText","secondary","background","default","shape","borderRadius","props","MuiButton","disableElevation","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.59a79a8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/classic.78e8fae4.jpg\";","export default __webpack_public_path__ + \"static/media/loom-carousel.8def8da0.jpg\";","export default __webpack_public_path__ + \"static/media/zen-carousel.dcda6b2c.jpg\";","import React, { useContext, useState } from 'react'\nimport { matress } from './MattressChoseComponent';\n// Make sure the shape of the default value passed to\n// createContext matches the shape that the consumers expect!\nexport const CartContext = React.createContext<{items:matress[],addItem:(item:matress)=>void}>({\n  items: [],\n  addItem: () => { }\n});\nCartContext.displayName = 'CartContext'\n\n\n\nconst CartContextProvider : React.FC = ({children}) => {\n  const [items, setItems] = useState<matress[]>([])\n  function addItem(newItem: matress) {\n    setItems([...items, newItem])\n  }\n  return (\n    <CartContext.Provider value={{ items, addItem }}>\n      {children}\n    </CartContext.Provider>\n  )\n}\n\n\nconst useCartContext = () => useContext(CartContext)\n\nexport {\n  CartContextProvider,\n  useCartContext\n}","import React, { useState } from 'react';\nimport { Button, makeStyles, Typography } from '@material-ui/core'\nimport { Hotel } from '@material-ui/icons';\nimport classicMatress from './images/classic.jpg'\nimport loomMatress from './images/loom-carousel.jpg'\nimport zenMatress from './images/zen-carousel.jpg'\nimport { ToggleButton, ToggleButtonGroup, Rating } from '@material-ui/lab';\nimport { AnimatePresence, motion, Variants } from 'framer-motion';\nimport { useCartContext } from './CartContext';\nimport clsx from 'clsx';\n\nexport type matress = {\n  name: string\n  price: number\n  reviewRating: number\n  image: string\n}\n\nconst matresses: { [key: string]: matress } = {\n  classic: {\n    name: \"Saatva Classic\",\n    price: 999,\n    reviewRating: 4.9,\n    image: classicMatress\n  },\n  loom: {\n    name: \"Loom & Leaf\",\n    price: 1299,\n    reviewRating: 4.0,\n    image: loomMatress\n  },\n  zen: {\n    name: \"Zenhaven\",\n    price: 1599,\n    reviewRating: 4.5,\n    image: zenMatress\n  }\n}\n\n// load the image and cache it so that there's no issues when it first gets mounted\nfunction preLoadImage(imageUrl: string) {\n  const img = new Image()\n  img.src = imageUrl\n}\n\nObject.values(matresses).map(({name})=>name).forEach(preLoadImage)\n\nconst useStyles = makeStyles((theme) => ({\n  matress: {\n    display: 'grid',\n    gap: theme.spacing(4),\n    gridTemplateColumns: '2fr 1fr'\n  },\n  matressSelectionContainer: {\n    display: 'grid',\n    gridAutoFlow: 'row',\n    gridAutoColumns: '1fr',\n    gridAutoRows: '1fr',\n    gap: theme.spacing(4)\n  },\n  matressDetails: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  selectButtons: {\n    width: '100%',\n    display: 'flex',\n    '& > .MuiToggleButton-root': {\n      border: '1px solid #d2d2d2',\n      flexGrow: 1,\n      backgroundColor: '#FFF',\n      '&.Mui-selected': {\n        backgroundColor: '#a6a19a',\n        color: '#FFF'\n      },\n      '& > span': {\n        whiteSpace: 'nowrap'\n      }\n    }\n  },\n  noTextTransform: {\n    textTransform: 'none'\n  },\n  matressImage: {\n    display: 'block',\n    objectFit: 'cover',\n    height: 0,\n    minHeight: '100%',\n    width: '100%'\n  },\n  imageHolder: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    gridTemplateRows: '1fr',\n    overflow: 'hidden',\n    '& > *': {\n      gridColumn: ' 1 / 2',\n      gridRow: '1 / 2'\n    }\n  },\n  minHeight: {\n    height: 'min-content'\n  },\n  \"@media (max-width: 720px)\": {\n    matress: {\n      gridAutoFlow: 'column',\n      gridTemplateColumns: 'unset',\n      gridTemplateRows: '1fr 2fr'\n    },\n    matressSelectionContainer: {\n      gap: theme.spacing(1)\n    }\n  }\n}))\n\nconst variants: Variants = {\n  enter: (direction: number) => {\n    return {\n      x: direction > 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1\n  },\n  exit: (direction: number) => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  }\n}\n\n\n\nfunction MattressChooseComponent() {\n  const classes = useStyles()\n  const { addItem } = useCartContext()\n  const [selectedMatress, setSelectedMatress] = useState<string>(Object.keys(matresses)[0])\n  const [[oldItemIndex, newItemIndex], setItemIndex] = useState<[number, number]>(() => [0, 0])\n  function updateMatress(newKey: string | null) {\n    if (newKey) {\n      setSelectedMatress(newKey)\n      const newNewItemIndex = Object.keys(matresses).findIndex((item) => newKey === item)\n      setItemIndex([newItemIndex, newNewItemIndex])\n    }\n  }\n  const direction = newItemIndex - oldItemIndex\n  return (\n    <div className={classes.matress}>\n      <div className={classes.imageHolder}>\n        <AnimatePresence initial={false} custom={direction}>\n          <motion.img\n            src={matresses[selectedMatress].image}\n            className={classes.matressImage}\n            key={selectedMatress}\n            initial=\"enter\"\n            animate=\"center\"\n            exit=\"exit\"\n            transition={{ stiffness: 100 }}\n            variants={variants}\n            custom={direction}\n          />\n        </AnimatePresence>\n      </div>\n      <div className={classes.matressSelectionContainer}>\n        <Typography variant='h5' component='h2'>Choose Your Mattress</Typography>\n        <div>\n          <Typography variant='overline' id='matress-picker'>Select Matress Type</Typography>\n          <ToggleButtonGroup\n            value={selectedMatress}\n            exclusive\n            onChange={(_: any, newValue: string | null) => updateMatress(newValue)}\n            aria-labelledby=\"matress-picker\"\n            className={classes.selectButtons}\n          >\n            {Object.entries(matresses).map(([key, value]) =>\n              <ToggleButton key={key} value={key} className={classes.noTextTransform}>\n                {value.name}\n              </ToggleButton>\n            )}\n          </ToggleButtonGroup>\n        </div>\n        <div className={classes.matressDetails}>\n          <div>\n            <Typography variant='subtitle2' id='matress-picker'>{matresses[selectedMatress].name} Matress</Typography>\n            <Rating\n              name=\"rating\"\n              aria-label='rating'\n              value={matresses[selectedMatress].reviewRating}\n              precision={0.1}\n              icon={<Hotel fontSize=\"inherit\" />}\n            />\n          </div>\n          <Typography variant='body2' id='matress-picker'>${matresses[selectedMatress].price.toLocaleString()}</Typography>\n        </div>\n        <Button\n          color='secondary'\n          variant='contained'\n          onClick={() => addItem(matresses[selectedMatress])}\n          className={clsx(classes.minHeight, classes.noTextTransform)}\n        >\n          Add to Cart\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n\nexport {\n  MattressChooseComponent\n}\n","import React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography, makeStyles, Badge, Container } from '@material-ui/core';\nimport { ShoppingCartOutlined } from '@material-ui/icons'\nimport { MattressChooseComponent } from './MattressChoseComponent';\nimport { useCartContext } from './CartContext';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    justifyContent: 'space-between'\n  },\n  mainContainer: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n  const { items } = useCartContext()\n  return (\n    <div>\n      <AppBar position=\"static\" color='default' elevation={1}>\n        <Container maxWidth='lg'>\n          <Toolbar className={classes.toolbar} disableGutters>\n            <Typography variant=\"h4\" component='h1' color='primary'>\n              saatva\n            </Typography>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"go-to-cart\">\n              <Badge badgeContent={items.length} color=\"primary\" aria-label={`${items.length} items in cart`}>\n                <ShoppingCartOutlined color='primary' aria-label=\"cart\"/>\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <main>\n        <Container maxWidth='lg' className={classes.mainContainer}>\n          <MattressChooseComponent />\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MuiThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core'\nimport { CartContextProvider } from './CartContext';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Questrial\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"',\n    overline:{ fontWeight:'bold', letterSpacing:'2px'},\n    subtitle2:{ fontWeight:'bold' },\n    h1: { fontFamily: '\"Questrial\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n    h2: { fontFamily: '\"Questrial\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n    h3: { fontFamily: '\"Questrial\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n    h4: { fontFamily: '\"Source Serif Pro\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n    h5: { fontFamily: '\"Source Serif Pro\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n    h6: { fontFamily: '\"Questrial\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n  },\n  palette: {\n    primary: {\n      main: '#c19579',\n      contrastText: '#FFF'\n    },\n    secondary: {\n      main: '#d4aa63',\n      contrastText:'#FFF'\n    },\n    background: {\n      default: '#f6f5f3'\n    }\n  },\n  shape: {\n    borderRadius: 0\n  },\n  props: {\n    MuiButton: {\n      disableElevation: true,\n    },\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <CartContextProvider>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </CartContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
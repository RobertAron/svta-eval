{"version":3,"sources":["images/classic.jpg","images/loom-carousel.jpg","images/zen-carousel.jpg","CartContext.tsx","MattressChoseComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CartContext","React","createContext","items","addItem","displayName","CartContextProvider","children","useState","setItems","Provider","value","newItem","useCartContext","useContext","matresses","classic","name","price","reviewRating","image","classicMatress","loom","loomMatress","zen","zenMatress","useStyles","makeStyles","theme","matress","display","gap","spacing","gridTemplateColumns","matressSelectionContainer","gridAutoFlow","gridAutoColumns","gridAutoRows","matressDetails","justifyContent","selectButtons","width","border","flexGrow","backgroundColor","color","whiteSpace","noTextTransform","textTransform","matressImage","objectFit","height","minHeight","imageHolder","gridTemplateRows","overflow","gridColumn","gridRow","variants","enter","direction","x","opacity","center","zIndex","exit","MattressChooseComponent","classes","Object","keys","selectedMatress","setSelectedMatress","oldItemIndex","newItemIndex","setItemIndex","className","AnimatePresence","initial","custom","motion","img","src","animate","transition","stiffness","Typography","variant","component","id","ToggleButtonGroup","exclusive","onChange","_","newValue","newKey","newNewItemIndex","findIndex","item","updateMatress","aria-labelledby","entries","map","key","ToggleButton","toLocaleString","Button","onClick","clsx","toolbar","mainContainer","paddingTop","paddingBottom","App","AppBar","position","elevation","Container","maxWidth","Toolbar","disableGutters","IconButton","edge","aria-label","Badge","badgeContent","length","invisible","ShoppingCartOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","typography","fontFamily","overline","fontWeight","letterSpacing","subtitle2","h1","h2","h3","h4","h5","h6","palette","primary","main","contrastText","secondary","background","default","shape","borderRadius","props","MuiButton","disableElevation","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.1b8575c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/classic.78e8fae4.jpg\";","export default __webpack_public_path__ + \"static/media/loom-carousel.8def8da0.jpg\";","export default __webpack_public_path__ + \"static/media/zen-carousel.dcda6b2c.jpg\";","import React, { useContext, useState } from 'react'\nimport { matress } from './MattressChoseComponent';\n// Make sure the shape of the default value passed to\n// createContext matches the shape that the consumers expect!\nexport const CartContext = React.createContext<{items:matress[],addItem:(item:matress)=>void}>({\n  items: [],\n  addItem: () => { }\n});\nCartContext.displayName = 'CartContext'\n\n\n\nconst CartContextProvider : React.FC = ({children}) => {\n  const [items, setItems] = useState<matress[]>([])\n  function addItem(newItem: matress) {\n    setItems([...items, newItem])\n  }\n  return (\n    <CartContext.Provider value={{ items, addItem }}>\n      {children}\n    </CartContext.Provider>\n  )\n}\n\n\nconst useCartContext = () => useContext(CartContext)\n\nexport {\n  CartContextProvider,\n  useCartContext\n}","import React, { useState } from 'react';\nimport { Button,  makeStyles, Typography } from '@material-ui/core'\nimport classicMatress from './images/classic.jpg'\nimport loomMatress from './images/loom-carousel.jpg'\nimport zenMatress from './images/zen-carousel.jpg'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { AnimatePresence, motion, Variants } from 'framer-motion';\nimport { useCartContext } from './CartContext';\nimport clsx from 'clsx';\n\nexport type matress = {\n  name: string\n  price: number\n  reviewRating: number\n  image: string\n}\n\nconst matresses: { [key: string]: matress } = {\n  classic: {\n    name: \"Saatva Classic\",\n    price: 999,\n    reviewRating: 4.9,\n    image: classicMatress\n  },\n  loom: {\n    name: \"Loom & Leaf\",\n    price: 1299,\n    reviewRating: 4.0,\n    image: loomMatress\n  },\n  zen: {\n    name: \"Zenhaven\",\n    price: 1599,\n    reviewRating: 4.5,\n    image: zenMatress\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  matress: {\n    display: 'grid',\n    gap: theme.spacing(4),\n    gridTemplateColumns: '2fr 1fr'\n  },\n  matressSelectionContainer: {\n    display: 'grid',\n    gridAutoFlow:'row',\n    gridAutoColumns:'1fr',\n    gridAutoRows:'1fr',\n    gap: theme.spacing(4)\n  },\n  matressDetails: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  selectButtons: {\n    width: '100%',\n    display: 'flex',\n    '& > .MuiToggleButton-root': {\n      border: '1px solid #d2d2d2',\n      flexGrow: 1,\n      backgroundColor:'#FFF',\n      '&.Mui-selected':{\n        backgroundColor:'#a6a19a',\n        color:'#FFF'\n      },\n      '& > span': {\n        whiteSpace: 'nowrap'\n      }\n    }\n  },\n  noTextTransform: {\n    textTransform:'none'\n  },\n  matressImage: {\n    display: 'block',\n    objectFit: 'cover',\n    height:0,\n    minHeight:'100%',\n    width:'100%'\n  },\n  imageHolder:{\n    display:'grid',\n    gridTemplateColumns:'1fr',\n    gridTemplateRows:'1fr',\n    overflow:'hidden',\n    '& > *': {\n      gridColumn:' 1 / 2',\n      gridRow: '1 / 2'\n    }\n  },\n  minHeight:{\n    height:'min-content'\n  },\n  \"@media (max-width: 720px)\":{\n    matress:{\n      gridAutoFlow:'column',\n      gridTemplateColumns: 'unset',\n      gridTemplateRows: '1fr 2fr'\n    },\n    matressSelectionContainer:{\n      gap: theme.spacing(1)\n    }\n  }\n}))\n\nconst variants : Variants = {\n  enter: (direction: number) => {\n    return {\n      x: direction > 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1\n  },\n  exit: (direction: number) => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 1000 : -1000,\n      opacity: 0\n    };\n  }\n}\n\n\nfunction MattressChooseComponent() {\n  const classes = useStyles()\n  const { addItem } = useCartContext()\n  const [selectedMatress, setSelectedMatress] = useState<string>(Object.keys(matresses)[0])\n  const [[oldItemIndex,newItemIndex], setItemIndex] = useState<[number,number]>(()=>[0,0])\n  function updateMatress(newKey:string|null){\n    if(newKey){\n      setSelectedMatress(newKey)\n      const newNewItemIndex = Object.keys(matresses).findIndex((item)=>newKey===item)\n      setItemIndex([newItemIndex,newNewItemIndex])\n    }\n  }\n  const direction = newItemIndex-oldItemIndex\n  return (\n    <div className={classes.matress}>\n      <div className={classes.imageHolder}>\n        <AnimatePresence initial={false} custom={direction}>\n          <motion.img\n            src={matresses[selectedMatress].image}\n            className={classes.matressImage}\n            key={selectedMatress}\n            initial=\"enter\"\n            animate=\"center\"\n            exit=\"exit\"\n            transition={{stiffness: 100 }}\n            variants={variants}\n            custom={direction}\n          />\n        </AnimatePresence>\n      </div>\n      <div className={classes.matressSelectionContainer}>\n        <Typography variant='h5' component='h2'>Choose Your Mattress</Typography>\n        <div>\n          <Typography variant='overline' id='matress-picker'>Select Matress Type</Typography>\n          <ToggleButtonGroup\n            value={selectedMatress}\n            exclusive\n            onChange={(_: any, newValue: string | null) => updateMatress(newValue)}\n            aria-labelledby=\"matress-picker\"\n            className={classes.selectButtons}\n          >\n            {Object.entries(matresses).map(([key, value]) =>\n              <ToggleButton key={key} value={key} className={classes.noTextTransform}>\n                {value.name}\n              </ToggleButton>\n            )} \n          </ToggleButtonGroup>\n        </div>\n        <div className={classes.matressDetails}>\n          <Typography variant='subtitle2' id='matress-picker'>{matresses[selectedMatress].name} Matress</Typography>\n          <Typography variant='body2' id='matress-picker'>${matresses[selectedMatress].price.toLocaleString()}</Typography>\n        </div>\n        <Button\n          color='secondary'\n          variant='contained'\n          onClick={()=>addItem(matresses[selectedMatress])}\n          className={clsx(classes.minHeight, classes.noTextTransform)}\n        >\n            Add to Cart\n        </Button>\n      </div>\n    </div>\n  )\n}\n\n\nexport {\n  MattressChooseComponent\n}\n","import React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography, makeStyles, Badge, Container } from '@material-ui/core';\nimport { ShoppingCartOutlined } from '@material-ui/icons'\nimport { MattressChooseComponent } from './MattressChoseComponent';\nimport { useCartContext } from './CartContext';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    justifyContent: 'space-between'\n  },\n  mainContainer: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n  const { items } = useCartContext()\n  return (\n    <div>\n      <AppBar position=\"static\" color='default' elevation={1}>\n        <Container maxWidth='lg'>\n          <Toolbar className={classes.toolbar} disableGutters>\n            <Typography variant=\"h4\" component='h1' color='primary'>\n              saatva\n            </Typography>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n              <Badge badgeContent={items.length} color=\"primary\" invisible={items.length===0}>\n                <ShoppingCartOutlined color='primary'/>\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <main>\n        <Container maxWidth='lg' className={classes.mainContainer}>\n          <MattressChooseComponent />\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MuiThemeProvider, createMuiTheme, CssBaseline } from '@material-ui/core'\nimport { CartContextProvider } from './CartContext';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Questrial\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"',\n    overline:{ fontWeight:'bold', letterSpacing:'2px'},\n    subtitle2:{ fontWeight:'bold' },\n    h1: { fontFamily: '\"Questrial\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n    h2: { fontFamily: '\"Questrial\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n    h3: { fontFamily: '\"Questrial\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n    h4: { fontFamily: '\"Source Serif Pro\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n    h5: { fontFamily: '\"Source Serif Pro\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n    h6: { fontFamily: '\"Questrial\", \"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"' },\n  },\n  palette: {\n    primary: {\n      main: '#c19579',\n      contrastText: '#FFF'\n    },\n    secondary: {\n      main: '#d4aa63',\n      contrastText:'#FFF'\n    },\n    background: {\n      default: '#f6f5f3'\n    }\n  },\n  shape: {\n    borderRadius: 0\n  },\n  props: {\n    MuiButton: {\n      disableElevation: true,\n    },\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <CartContextProvider>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </CartContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}